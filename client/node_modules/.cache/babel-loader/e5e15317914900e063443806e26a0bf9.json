{"ast":null,"code":"var _jsxFileName = \"C:\\\\0\\\\Project\\\\Test\\\\Meteor\\\\React\\\\tes-meteorId-main\\\\client\\\\src\\\\pages\\\\Admin.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Table, Button, Image } from \"react-bootstrap\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { UserContext } from \"../context/userContext\";\nimport { API } from \"../config/api\";\nimport styles from \"./styleModule/Admin.module.css\";\nimport edit from \"../images/edit.png\";\nimport trash from \"../images/trash.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Admin() {\n  _s();\n\n  var _route;\n\n  const [state, dispatch] = useContext(UserContext);\n  let navigate = useNavigate();\n\n  function handleAdd() {\n    navigate(\"/add-route\");\n  }\n\n  function handleEdit(id) {\n    navigate(\"/edit-route/\" + id);\n  }\n\n  const [users, setUsers] = useState([]);\n\n  const getUsers = async () => {\n    try {\n      const response = await API.get(\"/users\");\n      setRoute(response.data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const logout = () => {\n    console.log(state);\n    dispatch({\n      type: \"LOGOUT\"\n    });\n    navigate(\"/\");\n  };\n\n  useEffect(() => {\n    getRoutes();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.bg,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          className: styles.table,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), route.length !== 0 ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: (_route = route) === null || _route === void 0 ? void 0 : _route.map((element, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: element.method\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: element.path\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.btn,\n                  onClick: () => {\n                    handleEdit(element.id);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    className: styles.img,\n                    src: edit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: styles.btn,\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    className: styles.img,\n                    src: trash\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Data empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: styles.btnAdd,\n            variant: \"primary\",\n            onClick: handleAdd,\n            children: \"Add Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Admin, \"tsroczY8Y1A1pxZg0+MrRaUsFLU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["C:/0/Project/Test/Meteor/React/tes-meteorId-main/client/src/pages/Admin.js"],"names":["Container","Table","Button","Image","useState","useEffect","useContext","useNavigate","UserContext","API","styles","edit","trash","Admin","state","dispatch","navigate","handleAdd","handleEdit","id","users","setUsers","getUsers","response","get","setRoute","data","error","console","log","logout","type","getRoutes","bg","table","route","length","map","element","index","method","path","btn","img","btnAdd"],"mappings":"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","sourcesContent":["import { Container, Table, Button, Image } from \"react-bootstrap\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { UserContext } from \"../context/userContext\";\r\nimport { API } from \"../config/api\";\r\n\r\nimport styles from \"./styleModule/Admin.module.css\";\r\nimport edit from \"../images/edit.png\";\r\nimport trash from \"../images/trash.png\";\r\n\r\nexport default function Admin() {\r\n  const [state, dispatch] = useContext(UserContext);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  function handleAdd() {\r\n    navigate(\"/add-route\");\r\n  }\r\n  function handleEdit(id) {\r\n    navigate(\"/edit-route/\" + id);\r\n  }\r\n  const [users, setUsers] = useState([]);\r\n\r\n  const getUsers = async () => {\r\n    try {\r\n      const response = await API.get(\"/users\");\r\n      setRoute(response.data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    console.log(state);\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n    });\r\n    navigate(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRoutes();\r\n  });\r\n\r\n  return (\r\n    <div className={styles.bg}>\r\n      <Container className=\"d-flex justify-content-center align-content-center\">\r\n        <div>\r\n          <Table striped bordered hover className={styles.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>No</th>\r\n                <th>User</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            {route.length !== 0 ? (\r\n              <tbody>\r\n                {route?.map((element, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{element.method}</td>\r\n                    <td>{element.path}</td>\r\n                    <td>\r\n                      <button\r\n                        className={styles.btn}\r\n                        onClick={() => {\r\n                          handleEdit(element.id);\r\n                        }}\r\n                      >\r\n                        <Image className={styles.img} src={edit} />\r\n                      </button>\r\n                      <button className={styles.btn}>\r\n                        <Image className={styles.img} src={trash} />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            ) : (\r\n              <h1>Data empty</h1>\r\n            )}\r\n          </Table>\r\n\r\n          <div>\r\n            <Button\r\n              className={styles.btnAdd}\r\n              variant=\"primary\"\r\n              onClick={handleAdd}\r\n            >\r\n              Add Route\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={logout}>\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}